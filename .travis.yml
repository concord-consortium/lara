sudo: false # see: http://docs.travis-ci.com/user/workers/container-based-infrastructure/
language: ruby
rvm:
  - "2.3.7"

dist: precise

env:
  global:
    - CC_TEST_REPORTER_ID=7729fca8695dd1ce5c6117fcd57680ee5a00726647ae7d4fe52c029de211449f
    - COVERAGE_REPORT=true
    - RAILS_STDOUT_LOGGING=false # TravisCI terminates job if it logs to STDOUT too much

before_install:
  - gem update bundler
  - nvm install 11.14.0
  - bundle config gems.railslts.com $RAILS_LTS_USER:$RAILS_LTS_PASSWORD

before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
  - cp config/database.travis.yml config/database.yml
  - cp config/app_environment_variables.sample.rb config/app_environment_variables.rb
  - mysql -e 'create database lara_test;'
  - bundle exec rake db:migrate

# uncomment this line if your project needs to run something other than `rake`:
script:
  - bundle exec rake
  - cd lara-plugin-api-V2 && npm i && npm run test
  - cd - && cd lara-typescript && npm i && npm run test
  - cd -
#  - bundle exec rake jasmine:ci

after_script:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

cache: bundler

bundler_args: --without development

# blacklist - these branches aren't feature branches and shouldn't be getting direct commits
branches:
  except:
    - staging
    - production
