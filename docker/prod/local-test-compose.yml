# This docker-compose file can be used to build and test locally a production image of LARA.
# the recommended way to use it is:
# > export COMPOSE_FILE=docker/prod/local-test-compose.yml
# > export COMPOSE_PROJECT_NAME=lara_local_test
# You might want to change "_local_test" to the name of the version or branch you are testing. This will
# keep all of the docker containers isolated from your other containers

# The COMPOSE_PROJECT_NAME variable determins a prefix for the containers created by compose.
# Normally compose uses the parent directory name, but when a COMPOSE_FILE is used the prefix is empty.

# the production rails mailer currently can cause problems during local testing,
# it will currenty try to connect to the AWS SES service and then fail

# For first time you would do:
# docker-compose build
# docker-compose run app rake db:migrate

# If you are starting with a new database then you will probably need to make a user and make it an
# admin. This can be done by registering at /users/sign_up, then get into the server with
# docker-compose run app rails c
# followed by `user = User.last; user.is_admin=true; user.save`

version: '2'
services:
  # The rails app
  app:
    container_name: app
    build: ../..
    command: docker/prod/run.sh
    environment:
      VIRTUAL_HOST: app.lara
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: 12345
      DB_NAME: lara
      SECRET_TOKEN: b30c94c7-81b7-4f20-8df9-686b079a616a
      RAILS_STDOUT_LOGGING: 'true'
    ports:
      - "80:80"
    depends_on:
      - db
  worker:
    build: ../..
    container_name: worker
    command: script/delayed_job run
    environment:
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: 12345
      DB_NAME: lara
      RAILS_STDOUT_LOGGING: 'true'
    depends_on:
      - db
  db:
    container_name: db
    # this mysql image is used because it works out of the box on OS X
    # the official docker mysql container has permissions issues when writing to the disk
    # this boot2docker describes the problem: https://github.com/boot2docker/boot2docker/issues/581
    image: dgraziotin/mysql
    environment:
      MYSQL_ADMIN_PASS: 12345
