#
# This is a docker-compose overlay that connects LARA to the portal via a
# proxy container. It assumes the proxy container name is "http-proxy"
#
# - If you are running dinghy on Mac OS, this is the name the dinghy proxy
#   will have if you followed its documentation here:
#   https://github.com/codekitchen/dinghy-http-proxy#os-x
#
# - If you are running dory on linux, you will need to change the default
#   name of the http proxy container. To do that you will need to tell
#   dory to generate a config file. Do that with
#       `dory config-file`
#   This will write the config file ~/.dory.yml
#   Change the following config file line in the "nginx_proxy" section from:
#       container_name: dory_dinghy_http_proxy
#   to:
#       container_name: http-proxy
#
# NOTE if your proxy is not configured correctly, oauth will fail to
# authenticate users against portal.
#
# Follow the directions in
# https://github.com/concord-consortium/rigse/blob/master/README.md#sso-clients-and-lara-authoring-integration
# To complete the setup
version: '3'
services:
  app:
    environment:
      CONCORD_CONFIGURED_PORTALS: LOCALHOST HAS_STAGING
      CONCORD_LOCALHOST_URL: ${PORTAL_PROTOCOL:-http}://${PORTAL_HOST:?Need to define PORTAL_HOST}/
      CONCORD_LOCALHOST_CLIENT_ID: authoring
      CONCORD_LOCALHOST_CLIENT_SECRET: 'unsecure local secret'
      # the code requires at least 2 portals configured this second one to has Staging
      # will not actually work
      CONCORD_HAS_STAGING_URL: http://has.staging.concord.org/
      CONCORD_HAS_STAGING_CLIENT_ID: localhost
      CONCORD_HAS_STAGING_CLIENT_SECRET: XXXXXX
      CONCORD_HAS_STAGING_DISPLAY_NAME: Do not use

      # import local PORTAL_HOST
      PORTAL_HOST:
    external_links:
      - http-proxy:${PORTAL_HOST}
