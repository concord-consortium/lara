# If you are running with a proxy and dns setup like dinghy proxy you should use
# docker-compose-portal-proxy.yml instead of this override

# This override can be used to connect the portal with LARA.
# The key issue is that both your browser and LARA need to be able to connect to lara
# using the same URL.

# To use this override you need to define a entry in your host machines /etc/hosts
# So your browser can access the portal at some URL other than localhost.
# for example lets say you add the the entry:
#  127.0.0.1 portal.concord
# You also need to know what the exposed port of the portal is. By default it will be
# 3000 but that conflicts with the default port of LARA so you might have changed it.
# For this example lets assume it is 9000
# So now you need modify your .env file with:
# COMPOSE_FILE=... # add this file to the list of files
# PORTAL_HOST=portal.concord
# GATEWAY_IP= # you need to set the IP of docker gateway for the lara container
# one way to figure this out is to run this command:
# docker-compose run --rm app ip route | awk '/^default via /{print $3}'

# To setup the client id and client secret you should run this command in the portal project:
#   docker-compose run --rm app rake sso:add_client
version: '2'
services:
  app:
    environment:
      CONCORD_CONFIGURED_PORTALS: LOCALHOST HAS_STAGING
      CONCORD_LOCALHOST_URL: http://${PORTAL_HOST}:${PORTAL_PORT}/
      CONCORD_LOCALHOST_CLIENT_ID: localhost
      CONCORD_LOCALHOST_CLIENT_SECRET: 'unsecure local secret'
      # the code requires at least 2 portals configured this second one to has Staging
      # will not actually work
      CONCORD_HAS_STAGING_URL: http://has.staging.concord.org/
      CONCORD_HAS_STAGING_CLIENT_ID: localhost
      CONCORD_HAS_STAGING_CLIENT_SECRET: XXXXXX
      CONCORD_HAS_STAGING_DISPLAY_NAME: Do not use
    extra_hosts:
      - '${PORTAL_HOST}:${GATEWAY_IP}'
