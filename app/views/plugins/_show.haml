- unless plugin_loaded(plugin.url)
  = content_for :external_scripts do
    %script{src:plugin.url}

- if plugin.version < 2
  -# Version 1
  - output_id = "output-#{plugin.id}"
  .plugin-output{id: output_id}
  - runtime_div_selector = "##{output_id}"
  :javascript
    // Begin script for #{plugin.name}
    $(document).ready( function() {
      env = {
        name: '#{plugin.name}',
        scriptLabel: '#{plugin.label}',
        scriptUrl: '#{plugin.url}',
        pluginId: '#{plugin.id}',
        config: '#{ escape_javascript(plugin.author_data) }',
        div: $('#{runtime_div_selector}')[0]
      }
      console.log("Adding script #{plugin.label} with V1 (ExternalScript) API");
      ExternalScripts.init('#{plugin.label}', env);
    });
- else
  -# Version 2
  - plugin_learner_state = PluginLearnerState.find_or_create(plugin, @run)
  - learner_state = plugin_learner_state.state
  -# wrapped_embeddable template variable might be undefined when the activity level plugins are rendered
  - wrapped_embedd = defined?(wrapped_embeddable) && wrapped_embeddable
  - if wrapped_embedd
    -# Plugin is wrapping some other embeddable. It's injected into its div and gets question content.
    - runtime_div_selector = "##{wrapped_embedd.embeddable_dom_id}"
    - wrapped_selector = "#{runtime_div_selector} .embeddable-container"
  - else
    -# Typical case. Plugin renders its own output.
    - output_id = "output-#{plugin.id}"
    .plugin-output{id: output_id}
    - runtime_div_selector = "##{output_id}"
    - wrapped_selector = nil
  - firebase_jwt_url = api_v1_get_firebase_jwt_url(@run.id, {firebase_app: '_FIREBASE_APP_'})
  - user_email = @run.user ? @run.user.email : 'anonymous'
  - class_info_url = @run.class_info_url
  :javascript
    // Begin script for #{plugin.name}
    var pluginStatePaths = {
      savePath: `#{escape_javascript(api_v1_update_plugin_learner_state_path(plugin.id, @run.id))}`,
      loadPath: `#{escape_javascript(api_v1_show_plugin_learner_state_path(plugin.id, @run.id))}`
    };
    $(document).ready( function() {
      var getFirebaseJwtUrl = function(appName) {
        var laraJwtGettingUrl = '#{escape_javascript(firebase_jwt_url)}';
        return laraJwtGettingUrl.replace('_FIREBASE_APP_', appName);
      }
      env = {
        name: '#{plugin.name}',
        url: '#{plugin.url}',
        pluginId: '#{plugin.id}',
        pluginStateKey:'#{ escape_javascript(plugin_learner_state.shared_learner_state_key)}',
        authoredState: '#{ escape_javascript(plugin.author_data) }',
        learnerState:  '#{ escape_javascript(learner_state) }',
        div: $('#{runtime_div_selector}')[0],
        runID: #{@run.id},
        userEmail: '#{escape_javascript(user_email)}',
        classInfoUrl: '#{escape_javascript(class_info_url)}',
        remoteEndpoint: '#{escape_javascript(@run.remote_endpoint)}',
        getFirebaseJwtUrl: getFirebaseJwtUrl,
        wrappedEmbeddableDiv: $('#{wrapped_selector}')[0],
        wrappedEmbeddableContext: #{wrapped_embedd ? (LaraSerializationHelper.new).export(wrapped_embedd).to_json : 'null'}
      }
      console.log("Adding script #{plugin.label} with V2 LARA Plugin API")
      Plugins.initPlugin('#{plugin.label}', env, pluginStatePaths);
    });
