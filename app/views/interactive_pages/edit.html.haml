= content_for :session do
  #session
    = render :partial => 'shared/session'
= content_for :title do
  = "Edit #{@page.name}"
= content_for :nav do
  .breadcrumbs
    %ul
      %li= link_to "Home", root_path
      %li
        \/
        = link_to 'All Activities', activities_path
      %li
        \/
        = link_to @activity.name, edit_activity_path(@activity)
      %li
        \/
        = @page.name

%div{:class => ["content", "editing", @page.layout.match(/^r-/) ? "stacked-right" : nil]}
  .page-nav
    - if @page.higher_item
      %a{:class => 'previous', :href => edit_activity_page_path(@activity, @page.higher_item)}
        ! &nbsp;
    - else
      %a{:class => 'previous disabled'}
        ! &nbsp;
    - page_counter = 1
    - @activity.pages.each do |p|
      = link_to page_counter, edit_activity_page_path(@activity, p), :class => (p === @page) ? 'active' : ''
      - page_counter = page_counter + 1
    = link_to '+', new_activity_page_path(@activity), {:title => "Add another page to #{@activity.name}"}
    - if @page.lower_item
      %a{:class => 'next', :href => edit_activity_page_path(@activity, @page.lower_item)}
        ! &nbsp;
    - else
      %a{:class => 'next disabled'}
        ! &nbsp;

  %h1.title
    = @activity.name

  - if @editor_mode == LightweightActivity::ITSI_EDITOR_MODE
    %div{ :style => "font-weight: bold; margin: 10px 0; background-color: #cff204; padding: 10px;" }
      This page will use the ITSI editor mode once it is completed.

  %h2.question
    = editable_field @page, :name, {:use_trigger => true, :edit_string => 'Edit', :submit => 'Save', :cancel => 'Cancel', :onblur => 'ignore', :placeholder => 'page title'}
    %span.preview
      = link_to "Preview", preview_activity_page_path(@activity, @page), :target => 'new'
  %div.edit_interactive_page
    = form_for @page do |f|
      = f.select :layout, options_for_select(InteractivePage::LAYOUT_OPTIONS.map { |l| [l[:name], l[:class_val]] }, @page.layout), {},  { :onchange => 'this.form.submit();', :title => 'Page layout' }
      = f.select :embeddable_display_mode, InteractivePage::EMBEDDABLE_DISPLAY_OPTIONS, {}, { :onchange => 'this.form.submit();', :title => 'Display of embeddables: stacked for scrolling, or carousel for sequential display' }
      %label
        -# There is no typical :onchange => 'this.form.submit();' handler, as we also need confirmation dialog.
        -# It's handled separately in the JavaScript block at the end of this partial.
        = f.check_box :is_hidden, :id => 'hide-page-checkbox'
        Hidden
      %p.page-section-controls#page-section-controls
        %label
          = f.check_box :show_introduction, :onchange => 'this.form.submit();'
          Page introduction
        %label
          = f.check_box :show_info_assessment, :onchange => 'this.form.submit();'
          Info/Assessment block
        %label
          = f.check_box :show_interactive, :onchange => 'this.form.submit();'
          Interactive box
        %label
          = f.check_box :show_sidebar, :onchange => 'this.form.submit();'
          Page sidebar text
        - InteractivePage.registered_additional_sections.each do |s|
          %label
            = f.check_box "show_#{s[:name]}", :onchange => 'this.form.submit();'
            = s[:label]

  - if @page.show_introduction
    .instructions{:class => @page.text.blank? ? 'block-empty' : '' }
      %h2 Introduction
      = editable_field @page, :text, { :use_trigger => true, :open_if_empty => true, :edit_string => 'Edit', :type => 'wysiwyg', :rows => 5, :cols => 130, :width => '99%', :submit => '<button type="submit" class="jeditable-submit">Save</button>', :cancel => '<button type="cancel" class="jeditable-cancel">Cancel</button>', :onblur => 'ignore', :placeholder => '', :wysiwyg => { :controls => { :html => { :visible => true }, :h1 => { :visible => false }, :h2 => { :visible => false }, :h3 => { :visible => false } } } }
  .text
    - if @page.show_info_assessment
      .questions
        %h2 Info/Assess
        = form_tag add_embeddable_activity_page_path(@activity, @page), :class => 'embeddables-form' do
          = embeddable_selector
          = submit_tag 'Add Embeddable'
        #sort_embeddables.embeddables_list
          - @page.section_embeddables(nil).each do |e|
            .authorable{:id => "embeddable_#{e.id}.#{e.class.to_s}"}
              = render :partial => "#{e.class.name.underscore.pluralize}/author", :locals => { :embeddable => e, :page => @page, :allow_hide => true }
    -# Additional sections are dynamically loaded, based on .visible_sections value:
    - @page.visible_sections.each do |s|
      = render :partial => "#{s[:dir]}/author", :locals => { :page => @page, :section_name => s[:name], :section_label => s[:label], :allow_hide => false }
  - if @page.show_interactive
    %div{:class => (@page.show_info_assessment ? 'other' : 'other full-width')}
      = form_tag add_interactive_activity_page_path(@activity, @page), :class => 'interactives-form' do
        = select_tag :interactive_type, options_for_select(InteractivePage::INTERACTIVE_TYPES.map { |t| [t[:name], t[:class_name]] })
        = submit_tag 'Add Interactive'
      - @page.interactives.each do |interactive|
        = render :partial => "#{interactive.class.name.underscore.pluralize}/author", :locals => {:interactive => interactive, :allow_hide => false}
  - if @page.show_sidebar
    .sidebar
      %h2
        = editable_field @page, :sidebar_title, {:type => 'text' }
      = editable_field @page, :sidebar, { :use_trigger => true, :open_if_empty => true, :edit_string => 'Edit', :type => 'wysiwyg', :rows => 5, :cols => 130, :width => '99%', :submit => '<button type="submit" class="jeditable-submit">Save</button>', :cancel => '<button type="cancel" class="jeditable-cancel">Cancel</button>', :onblur => 'ignore', :placeholder => '', :wysiwyg => { :controls => { :html => { :visible => true }, :h1 => { :visible => false }, :h2 => { :visible => false }, :h3 => { :visible => false } } } }

:javascript
  $(function() {
    if ((navigator.userAgent.indexOf("MSIE"))!=-1){
      $('#page-section-controls').removeAttr("id");
    }
    // Hide page checkbox handling.
    var confirmHideMessage = "Are you sure you want to hide this page? You will lose data from #{pluralize(@activity.active_runs, "learner")} that have run this activity.";
    var activeRuns = #{@activity.active_runs};
    $('#hide-page-checkbox').on('change', function(e) {
      if (this.checked && activeRuns > 0) {
        if (confirm(confirmHideMessage)) {
          this.form.submit();
        } else {
          this.checked = false;
        }
      } else {
        this.form.submit();
      }
    });
  });
