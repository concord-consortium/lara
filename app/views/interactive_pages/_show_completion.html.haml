:ruby
  # We handle 7 different use cases and display 7 different versions of the completion page:
  # These cases are documented in _edit_completion.html.haml

  is_sequence = @sequence
  completed_activity = @run && @run.completed?
  # SequenceRuns do not correctly work with anonymous users. In the case of an anonymous user
  #   @sequence_run will be nil but @sequence will be valid
  completed_sequence = @sequence_run && @sequence_run.completed?
  next_activity      = is_sequence && @sequence.next_activity(@page.lightweight_activity)
  last_activity      = is_sequence && !next_activity

  data = nil
  if !is_sequence && !completed_activity
    data = {
      congratulations: false,
      status: 'unfinished-activity',
      thumbnail: @activity.thumbnail_url,
      complete_ribbon: false,
      prompt: 'incomplete-activity-go-back-or-exit'
    }
  elsif !is_sequence && completed_activity
    data = {
      congratulations: true,
      status: 'finished-activity',
      thumbnail: @activity.thumbnail_url,
      complete_ribbon: true,
      prompt: 'complete-activity-exit'
    }
  elsif is_sequence && !completed_activity && !last_activity
    data = {
      congratulations: false,
      status: 'unfinished-activity',
      thumbnail: next_activity.thumbnail_url,
      complete_ribbon: false,
      prompt: 'next-activity-or-exit'
    }
  elsif is_sequence && completed_activity && !last_activity
    data = {
      congratulations: true,
      status: 'finished-activity',
      thumbnail: next_activity.thumbnail_url,
      complete_ribbon: false,
      prompt: 'next-activity-or-exit'
    }
  elsif is_sequence && !completed_activity && last_activity
    data = {
      congratulations: false,
      status: 'unfinished-activity',
      thumbnail: @activity.thumbnail_url,
      complete_ribbon: false,
      prompt: 'incomplete-activity-go-back-or-exit'
    }
  elsif is_sequence && completed_activity && last_activity && !completed_sequence
    data = {
      congratulations: true,
      status: 'finished-activity',
      thumbnail: @activity.thumbnail_url,
      complete_ribbon: true,
      prompt: 'last-activity-exit'
    }
  elsif is_sequence && completed_activity && last_activity && completed_sequence
    data = {
      congratulations: true,
      status: 'finished-activity-and-sequence',
      thumbnail: @sequence.thumbnail_url,
      complete_ribbon: true,
      prompt: 'complete-sequence-exit'
    }
  end

  report_path  = summary_with_run_path(@page.lightweight_activity, @run_key) if @run_key
  page_name    = @page.name || @activity.name + ":#{@page.position}"

  if @sequence_run
    # if there is a sequence_run then we need to explicitly indicate it
    exit_link = sequence_with_sequence_run_key_path(@sequence, @sequence_run.key, :show_index => true)
  elsif @sequence
    # Anonymous users running a sequence will have a sequence but not a sequence run
    exit_link = sequence_path(@sequence, :show_index => true)
  else
    exit_link = activity_path(@activity, show_index: true)
  end

  exit_label_t = t("COMPLETION_PAGE.EXIT_LABEL")

- content_for :title do
  = page_name

.intro-mod
  - if completed_activity
    %h4.h4= t("COMPLETION_PAGE.HEADER", {activity: @activity.name})

-# Control layout here. Add one of the following classes: l-full-width, l-6040, l-7030, r-4060, r-3070
.content-mod{ :class => 'l-full-width' }
  .ui-block-1
    .congratulations-block
      %div
        -# Status:
        - if data[:congratulations]
          %i.fa.fa-check-square-o.fa-2x
          %span.congratulations= t("COMPLETION_PAGE.CONGRATULATIONS")
        - else

        - case data[:status]
        - when 'unfinished-activity'
          %span.unfinished-activity= t('COMPLETION_PAGE.UNFINISHED_ACTIVITY', activity: @activity.name)
        - when 'finished-activity'
          %span.finished-activity= t('COMPLETION_PAGE.FINISHED_ACTIVITY', activity: @activity.name)
        - when 'finished-activity-and-sequence'
          %span.finished-activity= t('COMPLETION_PAGE.FINISHED_ACTIVITY', activity: @activity.name)
          %span.finished-sequence= t('COMPLETION_PAGE.FINISHED_SEQUENCE')

      - if @page.lightweight_activity.student_report_enabled
        .submit.report
          %a{:href => report_path, :class => 'gen-report', :target => 'new' }
            %input{ :class => 'button', :type => 'submit', :value => t("COMPLETION_PAGE.GENERATE_A_REPORT") }

    .bottom-block
      .image-preview
        -# Thumbnail:
        - if data[:complete_ribbon]
          .ribbon_wrap
            = ribbon(t("COMPLETED"), "my-ribbon")
        - if data[:thumbnail].present?
          %img{src: data[:thumbnail], alt: 'material thumbnail'}

      .description
        -# Prompt:
        - case data[:prompt]
        - when 'next-activity-or-exit'
          %h1= t("COMPLETION_PAGE.NEXT_UP")
          %h2.h2= next_activity.name
          = next_activity.description.html_safe
        - when 'incomplete-activity-go-back-or-exit'
          %p= t('COMPLETION_PAGE.EXIT_NON_COMPLETED_MATERIAL', material: @activity.name)
        - when 'incomplete-activity-go-back-or-exit'
          %p= t('COMPLETION_PAGE.EXIT_NON_COMPLETED_MATERIAL', material: @activity.name)
        - when 'complete-activity-exit'
          %p= t('COMPLETION_PAGE.EXIT_COMPLETED_MATERIAL', material: @activity.name)
        - when 'last-activity-exit'
          %p= t('COMPLETION_PAGE.EXIT_LAST_ACTIVITY', activity: @activity.name, sequence: @sequence.name)
        - when 'complete-sequence-exit'
          %p= t('COMPLETION_PAGE.EXIT_COMPLETED_MATERIAL', material: @sequence.name)

        -# Finish links:
        - case data[:prompt]
        - when 'next-activity-or-exit'
          .finish-links
            %a{ :href => runnable_activity_path(next_activity, show_index: true)}
              %input.button{ :type => "submit", :value => t("COMPLETION_PAGE.START_NEXT")}
            or
            %a.exit{:href => exit_link}=exit_label_t
        - else
          .finish-links
            %a.exit{:href => exit_link}
              %input{ :class => 'button exit-btn', :type => 'submit', :value => exit_label_t }


:sass
  .intro-mod
    .h4
      font-weight: 100
      font-size: 19pt
  .ui-block-1
    div
      padding: 0.5em
    p
      margin: 10px 0
  i
    vertical-align: middle

  .content-mod
    .congratulations-block
      vertical-align: text-top
      box-sizing: border-box
      background-color: hsl(184, 67%, 91%)
      font-style: italic
      color: hsl(184, 67%, 40%)
      display: flex
      align-content: center
      justify-content: space-between
      font-size: 16pt
      font-weight: bold

      input[type="submit"].button
        font-size: 10pt
        margin: 0px

    .continue
      font-weight: 100

    .bottom-block
      display: flex
      justify-content: flex-start
      align-items: flex-start
      background-color: hsl(0, 0%, 91%)
      padding: 10px
      margin-top: 20px
      .finish-links
        display: inline-block
        padding-left: 0px
        a:hover
          text-decoration: none
        a.exit
          font-weight: bold
          text-decoration: underline

      h1
        font-size: 16pt
        color: hsl(0,0%,50%)
        text-transform: uppercase
        font-weight: 100
      h2
        font-weight: 400
        font-size: 18pt
        color: hsl(184, 67%, 40%)
      .image-preview
        margin: 0 10px 0 0
        img
          width: 200px
          height: auto
      input[type="submit"]
        margin: 0px
        display: inline-block
      .description
        margin: 0px

    .ribbon_wrap
      padding: 0 !important
      margin: 3px -7px 10px 10px

    .exit-btn
      font-size: 1.2em
      background: #2869af
      background-image: linear-gradient(top, #2869af, darken(#2869af, 10%))
      border: 1px solid #2869af
      &:hover
        background-color: darken(#2869af, 5%)
        background-image: -webkit-linear-gradient(top, darken(#2869af, 5%), darken(#2869af, 10%))
        background-image: linear-gradient(top, darken(#2869af, 5%), darken(#2869af, 10%))
      &:active
        background-color: darken(#2869af, 10%)
        background-image: -webkit-linear-gradient(top, darken(#2869af, 5%), darken(#2869af, 10%))
        background-image: linear-gradient(top, darken(#2869af, 10%), darken(#2869af, 5%))
