- labbook = show_labbook_under_interactive?(@run, interactive)

- if interactive.reportable?
  = render :partial => 'shared/question_header', :locals => { :embeddable => interactive }
.interactive-container
  - if interactive.native_height > 1
    - if interactive.image_url.present?
      -# if interactive has click to play, always show the img
      -# otherwise only show the image in the printout
      .img-container{:id => dom_id_for(interactive, :interactive_image),
                     :class => interactive.click_to_play ? "" : "print-only"}
        =image_tag(interactive.image_url)
    - else
      .interactive-placeholder.print-only
        Interactive Model

    - if interactive.click_to_play
      - if interactive.full_window
        .full-window-overlay
          .loading-msg
            %i.wait-icon.fa.fa-spinner.fa-spin
            Loading interactive...
        .full-window-menu
          .full-window-title
            = interactive.name
          .menu-items
            - if labbook
              .screenshot
                = render partial: 'embeddable/labbook_answers/lightweight', locals: { embeddable: labbook }
            .exit-full-window{:id => dom_id_for(interactive, :exit_full_window)}
              Return to Activity

      .click_to_play.shown.screen-only{:id => dom_id_for(interactive, :click_to_play), 'data-trigger-full-window' => interactive.full_window}
        .background
        .text= interactive.click_to_play_prompt.present? ? interactive.click_to_play_prompt : MwInteractive::DEFAULT_CLICK_TO_PLAY_PROMPT

      = interactive_iframe_tag(interactive, @run, false) do

        Your browser does not support inline frames, or is currently not configured to display inline frames.
        Content can be viewed at the actual source page:
        = link_to interactive.url, interactive.url

    - else
      = interactive_iframe_tag(interactive, @run) do

        Your browser does not support inline frames, or is currently not configured to display inline frames.
        Content can be viewed at the actual source page:
        = link_to interactive.url, interactive.url

    = interactive_data_div(interactive, @run)

- if interactive.enable_learner_state && interactive.show_delete_data_button
  = button_tag 'Clear & start over', {class: 'delete_interactive_data screen-only', id: "delete-int-data-#{interactive.id}", style: 'display: none;'}

.print-only.iframe-url
  = link_to "#{interactive.url}", "#{interactive.url}"

- if labbook && !interactive.full_window
  .question
    = render partial: 'embeddable/labbook_answers/lightweight', locals: { embeddable: labbook }

:javascript
  $(document).ready(function() {
    function startInteractive(clickToPlayElem) {
      var $clickToPlay = $(clickToPlayElem);
      var $interactiveContainer = $clickToPlay.parent('.interactive-container');
      var $embeddableContainer = $clickToPlay.parents('.embeddable-container');
      LARA.Events.emitInteractiveAvailable({
        container: $embeddableContainer[0],
        available: true
      });
      $clickToPlay.css('display', 'none');
      $clickToPlay.removeClass('shown');
      $('##{dom_id_for(interactive, :interactive_image)}').css('display', 'none');
      if (!$interactiveContainer.data('initialized')) {
        $('#interactive_#{interactive.id}').attr('src','#{interactive.url}');
        InteractiveManager.register($interactiveContainer);
        $interactiveContainer.data('initialized', true);
      }
    }
    // Full window interactive uses fixed layout too and when iPad keyboard is opened,
    // it might totally break it. It's an iOS Safari bug, see (different solutions, but the same bug):
    // http://stackoverflow.com/questions/14492613/ios-ipad-fixed-position-breaks-when-keyboard-is-opened
    // Setting fixed position of HTML element helps (that's done by noscroll class). However, it also resets
    // current scroll position, so we need to save it and restore when user leaves full window mode.
    var currentScrollTop;
    function enterFullWindow(clickToPlayElem) {
      currentScrollTop = $(window).scrollTop();
      var $interactiveContainer = $(clickToPlayElem).parent('.interactive-container');
      $interactiveContainer.addClass('full-window');
      $('html').addClass('noscroll');
    }
    function exitFullWindow() {
      $('html').removeClass('noscroll');
      var $clickToPlay = $('##{dom_id_for(interactive, :click_to_play)}');
      var $interactiveContainer = $clickToPlay.parent('.interactive-container');
      $clickToPlay.css('display', 'block');
      $clickToPlay.addClass('shown');
      $interactiveContainer.removeClass('full-window');
      $(window).scrollTop(currentScrollTop);
    }

    $('##{dom_id_for(interactive, :click_to_play)}').click(function() {
      startInteractive(this);
      if (#{interactive.full_window}) {
        enterFullWindow(this);
      }
    });
    $('##{dom_id_for(interactive, :exit_full_window)}').click(exitFullWindow);
  })
