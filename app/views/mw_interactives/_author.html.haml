.model-edit
  .toolbar
    .interactice-id{style:"float: left; display:inline-block;"}
      Interactive ID: #{interactive.id}
    = render partial: 'shared/hide_interactive_link', locals: {interactive: interactive, toggle_vis_path: toggle_visibility_page_mw_interactive_path(@page, interactive)}
    |
    = link_to "Edit", edit_page_mw_interactive_path(@page, interactive), :remote => true, :id => "edit-int-#{interactive.id}"
    |
    - confirm_message = "Are you sure you want to delete this element? You will lose data from #{pluralize(@activity.active_runs, "learner")} that #{"has".pluralize(@activity.active_runs)} answered this question."
    = link_to "Delete", page_mw_interactive_path(@page, interactive), :method => :delete, :data => ({:confirm => (@activity.active_runs > 0) ? confirm_message : 'Are you sure?'} if interactive.enable_learner_state)
    - if params[:edit_mw_int].to_i == interactive.id
      :javascript
        $("a[id^=edit-int-#{interactive.id}]").click()

  .interactive-content{:style => interactive.is_hidden ? 'display: none;' : ''}
    %div{:id => "authorable-interactive-#{interactive.id}"}

:javascript
  (function() {
    var props = {
      interactive: #{interactive.to_json},
      updateUrl: "#{page_mw_interactive_path(page, interactive)}"
    };
    InteractiveAuthoring = React.createElement(modulejs.require('components/authoring/mw_interactive'), props);
    React.render(InteractiveAuthoring, $("#authorable-interactive-#{interactive.id}")[0]);
  }());
