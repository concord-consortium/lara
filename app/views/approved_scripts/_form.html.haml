= form_for(@approved_script) do |f|
  %div{style: "margin: 0em 5em; display: flex; flex-direction: column;"}
    - if @approved_script.errors.any?
      #error_explanation
        %h2
          = pluralize(@approved_script.errors.count, "error")
          prohibited this approved_script from being saved:
        %ul
          - @approved_script.errors.full_messages.each do |msg|
            %li= msg

    .field{style: "margin: 1em 0px;"}
      = f.label :json_url
      %br
      = f.text_field :json_url
      = f.button "Load JSON Manifest", :id => "approved_script_load_json", :onclick => "loadPluginJSON();"
    .field{style: "margin: 1em 0px;"}
      = f.label :name
      %br
      = f.text_field :name
    .field{style: "margin: 1em 0px;"}
      = f.label :label
      %br
      = f.text_field :label
    .field{style: "margin: 1em 0px;"}
      = f.label :url
      %br
      = f.text_field :url
    .field{style: "margin: 1em 0px;"}
      = f.label :version
      %br
      = f.select :version, ['1', '2', '3']
    .field{style: "margin: 1em 0px;"}
      = f.label :description
      %br
      = f.text_area :description
    #component_display.field{style: "margin: 1em 0px;"}
    = f.hidden_field :authoring_metadata
    .actions{style: "margin: 1em 0px;"}
      = f.submit

:javascript
  function showAuthoringMetadata() {
    var metadata = JSON.parse(document.getElementById("approved_script_authoring_metadata").value || "{}");
    var rows = [];
    (metadata.components || []).forEach(function (component) {
      var decorates = component.decorates ? component.decorates.map(function (d) { return d.replace("Embeddable::", "")}).join(", ") : "<i>n/a</i>";
      rows.push("<tr><td>" + component.name + "</td><td>" + component.scope + "<td>" + decorates + "</td></tr>")
    });
    var el = document.getElementById("component_display");
    if (rows.length > 0) {
      el.innerHTML = "<table><thead><tr><th>Component</th><th>Scope</th><th>Decorates</th></thead><tbody>" + rows.join("") + "</tbody></table>";
    }
    else {
      el.innerHTML = "No authoring metadata found.";
    }
  }

  function loadPluginJSON() {
    var baseUrl;
    Promise.resolve(document.getElementById("approved_script_json_url"))
      .then(function (jsonUrl) {
        var url = jsonUrl ? jsonUrl.value.trim() : "";
        if (url.length == 0) {
          throw new Error("Please enter an url to the JSON file");
        }
        if (!/https?:/.test(url)) {
          throw new Error("Please enter a valid url to the JSON file");
        }
        var a = document.createElement("A");
        a.href = url;
        baseUrl = a.origin + "/";
        return fetch(url);
      })
      .then(function(resp) {
        return resp.json();
      })
      .then(function(json) {
        // document.getElementById("json").innerHTML = JSON.stringify(json.authoring_metadata || {});
        ["name", "label", "url", "version", "description", "authoring_metadata"].forEach(function (field) {
          var value = json[field];
          if (value) {
            // allow urls to be relative to the json base url
            if ((field === "url") && value && !/https?:/.test(value)) {
              value = baseUrl + value;
            }
            if (field === "authoring_metadata") {
              value = JSON.stringify(value);
            }
            document.getElementById("approved_script_" + field).value = value;
            showAuthoringMetadata();
          }
        })
      })
      .catch(function (e) {
        alert("Unable to load JSON: " + e.toString());
      });
  }

  showAuthoringMetadata();
