:ruby
  dash_id = "#{type}-#{embeddable.id}"
  under_id = "#{type}_#{embeddable.id}"
  tracked = embeddable.respond_to?(:tracked_question) && embeddable.tracked_question

  confirm_delete = t("EMBEDDABLE.CONFIRM_REMOVE.NOT_IN_USE")
  confirm_hide   = t("EMBEDDABLE.CONFIRM_HIDE.NOT_IN_USE")
  if tracked
    confirm_delete = t("EMBEDDABLE.CONFIRM_REMOVE.TRACKED") if tracked
    confirm_hide   = t("EMBEDDABLE.CONFIRM_HIDE.TRACKED") if tracked
  elsif @activity.active_runs > 0
    confirm_delete = t("EMBEDDABLE.CONFIRM_REMOVE.IN_USE", learners: pluralize(@activity.active_runs, "learner"))
    confirm_hide   = t("EMBEDDABLE.CONFIRM_HIDE.IN_USE", learners: pluralize(@activity.active_runs, "learner"))
  end



  edit_path = case type
    when "or"
      edit_embeddable_open_response_path(embeddable)
    when "iq"
      edit_embeddable_image_question_path(embeddable)
    when "mc"
      edit_embeddable_multiple_choice_path(embeddable)
    when "lb"
      edit_embeddable_labbook_path(embeddable)
    when "xhtml"
      edit_embeddable_xhtml_path(embeddable)
    when "mw_int"
      edit_page_mw_interactive_path(page, embeddable)
    when "image"
      edit_page_image_interactive_path(page, embeddable)
    when "video"
      edit_page_video_interactive_path(page, embeddable)
  end

- if tracked
  - if can? :manage, QuestionTracker
    %span= t("TRACKED_QUESTION.CAN_EDIT")
    = link_to "edit", edit_path, :remote => true, :id => "edit-embed-#{dash_id}"
  - else
    = t("TRACKED_QUESTION.CANT_EDIT")
- else
  - if allow_hide
    = link_to "show", page_hideshow_embeddable_path(page, embeddable),
      :remote => true,
      :method => :post,
      :id => "show-#{dash_id}",
      :onclick => "toggle_hide_#{under_id}()"
    = link_to "hide", page_hideshow_embeddable_path(page, embeddable),
      :remote => true,
      :method => :post,
      :id => "hide-#{dash_id}",
      :onclick => @activity.active_runs > 0 ? "confirm('#{confirm_hide}') && toggle_hide_#{under_id}()" : "toggle_hide_#{under_id}()"
  = link_to "edit", edit_path, :remote => true, :id => "edit-embed-#{dash_id}"

= link_to "remove", page_remove_embeddable_path(page, embeddable), :method => :post, :data => {:confirm => confirm_delete }
- if params["edit_embed_#{type}".to_sym].to_i == dash_id
  :javascript
    $("a[id^=edit-embed-#{dash_id}]").click()

- if allow_hide
  :javascript
    var hidden_#{under_id} = #{embeddable.is_hidden ? 'true' : 'false'};
    function toggle_hide_#{under_id}() {
      hidden_#{under_id} = !hidden_#{under_id};
      update_view_#{under_id}();
    }
    function update_view_#{under_id}() {
      var $showLink = $("a[id^=show-#{dash_id}]"),
          $hideLink = $("a[id^=hide-#{dash_id}]"),
          $options = $showLink.closest(".embeddable_tools").next(".embeddable_options");

      if (hidden_#{under_id}) {
        $showLink.show();
        $hideLink.hide();
        $options.hide();
      }
      else {
        $showLink.hide();
        $hideLink.show();
        $options.show();
      }
    }

    // call after so that options are visible
    setTimeout(update_view_#{under_id});
