/* !============================================= */

/* ! Universal						   			  */

/* !============================================= */


/* Kill the margin on the last column */

.ui-block:last-child,
.ui-block.last {
	margin-right: 0;
}



/* !============================================= */

/* ! Media Grid							   			  */

/* !============================================= */

@mixin media-grid($num: 2, $pad: em(20), $class:media-block) {
	margin-left: -#{$pad};
	@include pie-clearfix;

	.#{$class} {
		float: left;
		padding-left: #{$pad};
		@if $num == 2 or $num == "two" {
			width: 50%;
			&:nth-child(2n+3) {
				clear: left;
			}
		}
		@if $num == 3 or $num == "three" {
			width: 33.3333%;
			&:nth-child(3n+4) {
				clear: left;
			}
			.ie7 & {
				width: 33%;
			}
		}
		@if $num == 4 or $num == "four" {
			width: 25%;
			&:nth-child(4n+5) {
				clear: left;
			}
		}
		@if $num == 5 or $num == "five" {
			&:nth-child(5n+6) {
				clear: left;
			}
			width: 20%;
		}
	}
} //media-grid


/* !============================================= */

/* ! Grids							   			  */

/* !============================================= */


/* Grid-2 vars */

$width-1: 50% !default;
$width-2: 50% !default;
$margin-r: 5% !default;

@mixin ui-grid-2($width-1,$width-2,$margin-r) {
	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width-1 - ($margin-r/2);
		@include float-left;
		margin-right: $margin-r;
	}

	> .ui-block-2,
	> .ui-block.second {
		width: $width-2 - ($margin-r/2);
		@include float-left;
		margin-right: 0;
	}
}

@mixin ui-grid-rl($width-1,$width-2,$margin-r) {
	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width-1 - ($margin-r/2);
		@include float-right;
	}

	> .ui-block-2,
	> .ui-block.second {
		width: $width-2 - ($margin-r/2);
		@include float-left;
		margin-right: 0;
	}
}

@mixin ui-grid-lr($width-1,$width-2,$margin-r) {
	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width-1 - ($margin-r/2);
		@include float-left;
	}

	> .ui-block-2,
	> .ui-block.second {
		width: $width-2 - ($margin-r/2);
		@include float-right;
		margin-right: 0;
	}
}

.question.hidden { margin-bottom: 0 !important; }
.question-bd {
	padding: 25px 0 !important;
}
.ui-block-1,
.ui-block.first,
.ui-block-2,
.ui-block.second, {
	transition: .1s;
}

.questions-mod.ui-block-2,
.questions-mod.ui-block.second, {
	background: #eee;
	padding: 10px 50px 10px 10px;
}

.ui-block-1.open,
.ui-block.first.open,
.ui-block-1.open,
.ui-block.first.open {
	transition: .1s;
	width: 95.6% !important;
}

.ui-block-2.closed,
.ui-block.second.closed,
.ui-block-2.closed,
.ui-block.second.closed {
	height: 400px;
	overflow: hidden;
	padding: 10px 0;
	transition: .1s;
	width: 4.4% !important;

	.question-tab, .question-tab div {
		right: 0;
	}
	.question-tab div {
		position: absolute;
		right: 0;
		top: 0;

		&:before {
			content: '\00BB';
		}
		span {
			height: 88px;
			width: 105px;
		}
	}

}
.l-responsive > .ui-block-1.open,
.l-responsive > .ui-block.first.open,
.l-responsive > .ui-block-1.open,
.l-responsive > .ui-block.first.open {
	flex: 70;
}

.l-responsive > .ui-block-2.closed,
.l-responsive > .ui-block.second.closed,
.l-responsive > .ui-block-2.closed,
.l-responsive > .ui-block.second.closed {
	flex: 1;

}
.question-toggle {
	display: none;
	margin: -38px -10px 10px 0;
  text-align: right;

	button {
		background: #eee;
		border: none;
		color: #777;
		display: inline-block;
		font-size: 24px;
		padding: 0 10px;

		&:hover {
			background: #bbb;
		}
	}
}

.question-tab {
	background: #aaa;
	color: #fff;
	cursor: pointer;
	font-size: 24px;
	height: 100%;
	position: absolute;
	right: 0;
	text-align: center;
	top: 0;
	transition: .1s;
	width: 40px;
	z-index: 10;

	&:hover {
		background: #777;
	}

	&:before {
		content: '\00AB';
		display: inline-block;
		font-size: 44px;
		line-height: 0;
		margin: 20px 0 0;
		padding: 0;
		position: -webkit-sticky;
		position: sticky;
		right: 10px;
		top: 20px;
	}

	span {
		color: #fff;
		display: inline-block;
		font-size:  14px;
		height: 70px;
		left: 0;
		position: -webkit-sticky;
		position: sticky;
		top: 55px;
		transform: rotate(-90deg);
		width: 90px;
		white-space: nowrap;
	}
}

/****** NEW ******/
/* .question-tab {
	background: #fff;
	color: #fff;
	cursor: pointer;
	font-size: 24px;
	height: 100%;
	position: absolute;
	right: 0;
	text-align: center;
	top: 0;
	transition: .1s;
	width: 40px;
	z-index: 10;

	div {
    background: #aaa;
		height: 160px;
		margin-top: 20px;
		position: sticky;
		top: 20px;
		right: 0;
		width: 40px;

		&:hover {
			background: #777;
		}

		&:before {
			content: '\00AB';
			display: inline-block;
			font-size: 44px;
			line-height: 0;
			margin: 0;
			padding: 0;
			position: absolute;
			right: 10px;
			top: 20px;
		}

		span {
			color: #fff;
			display: inline-block;
			font-size:  14px;
			height: 80px;
			left: 0;
			position: absolute;
			top: 55px;
			transform: rotate(-90deg);
			width: 100px;
			white-space: nowrap;
		}
  }
} */

/***** TOP *****/
.questions-mod.ui-block-2,
.questions-mod.ui-block.second, {
	background: #eee;
	padding: 10px;
}
.ui-block-1.open,
.ui-block.first.open,
.ui-block-1.open,
.ui-block.first.open {
	transition: .1s;
	width: 95.6% !important;
}

.ui-block-2.closed,
.ui-block.second.closed,
.ui-block-2.closed,
.ui-block.second.closed {
	height: 400px;
	overflow: hidden;
	padding: 10px 0;
	transition: .1s;
	width: 4.4% !important;

	.question-tab, .question-tab div {
		height: 100%;
		right: 0;
		top: 0;

		&:before {
			content: '\00BB';
			left: 12px;
		}
		span {
			left: -32px;
			top: 70px;
			transform: rotate(-90deg);
		}
	}

}
.question-toggle {
	display: block;
	margin: -38px -10px 10px 0;
  text-align: right;

	button {
		background: #eee;
		border: none;
		color: #777;
		display: inline-block;
		font-size: 24px;
		padding: 0 10px;

		&:hover {
			background: #bbb;
		}
	}
}

.question-tab {
	background: #eee;
	color: #666;
	cursor: pointer;
	font-size: 24px;
	height: 35px;
	position: absolute;
	right: 0;
	text-align: center;
	top: -35px;
	transition: .1s;
	width: 100%;
	z-index: 10;

	&:hover {
		background: #ccc;
		color: #313131
	}

	&:before {
		content: '\00AB';
		display: inline-block;
		font-size: 35px;
		left: auto;
		right: 110px;
		line-height: 0;
		margin: 0;
		padding: 0;
		position: absolute;
		top: 14px;
	}

	span {
		color: #666;
		display: inline-block;
		font-size: 14px;
		height: 35px;
		left: auto;
		right: -2px;
		position: absolute;
		top: 9px;
		transform: rotate(0deg);
		width: 120px;
		white-space: nowrap;
	}
}

.flash {
  -moz-animation: flash 2s ease-out;
	-moz-animation-iteration-count: infinite;
  -webkit-animation: flash 2s ease-out;
	-webkit-animation-iteration-count: infinite;
  -ms-animation: flash 2s ease-out;
	-ms-animation-iteration-count: infinite;
	animation: flash 2s ease-out;
	animation-iteration-count: infinite;
}

@keyframes flash {
    0% { background-color: #aaa; }
    50% { background-color: #777; }
    100% { background-color: #aaa; }
}

@-webkit-keyframes flash {
    0% { background-color: #aaa; }
    50% { background-color: #777; }
    100% { background-color: #aaa; }
}

@-moz-keyframes flash {
    0% { background-color: #aaa; }
    50% { background-color: #777; }
    100% { background-color: #aaa; }
}

@-ms-keyframes flash {
    0% { background-color: #aaa; }
    50% { background-color: #777; }
    100% { background-color: #aaa; }
}

/* Grid-3 vars */

$width3-1: 33.333333% !default;
$width3-2: 33.333333% !default;
$width3-3: 33.333333% !default;
$margin3-r: 3.5% !default;

@mixin ui-grid-3($width3-1,$width3-2,$width3-3,$margin3-r)  {
	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width3-1 - ($margin3-r/3);
		@include float-left;
		margin-right: $margin3-r/2;
		transition: .3;
	}

	> .ui-block-2,
	> .ui-block.second {
		width: $width3-2 - ($margin3-r/3);
		@include float-left;
		margin-right: $margin3-r/2;
		transition: .3;
	}

	> .ui-block-3,
	> .ui-block.last {
		width: $width3-3 - ($margin3-r/3);
		@include float-left;
		margin-right: 0;
	}
}

/* Grid-3-rrl vars */

@mixin ui-grid-rrl($width3-1,$width3-2,$width3-3,$margin3-r)  {
	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width3-1 - ($margin3-r/3);
		@include float-right;
		margin-right: 0;
	}

	> .ui-block-2,
	> .ui-block.second {
		width: $width3-2 - ($margin3-r/3);
		@include float-right;
		margin-right: $margin3-r/2;
	}

	> .ui-block-3,
	> .ui-block.last {
		width: $width3-3 - ($margin3-r/3);
		@include float-left;
		margin-right: $margin3-r/2;
	}
}


/* Grid-4 vars */

$width4-1: 25% !default;
$width4-2: 25% !default;
$width4-3: 25% !default;
$width4-4: 25% !default;
$margin4-r: 8% !default;

@mixin ui-grid-4($width4-1,$width4-2,$width4-3,$width4-4,$margin5-r) {

	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width4-1 - ($margin4-r/4);
		@include float-left;
		margin-right: $margin4-r/3;
	}

	> .ui-block-2,
	> .ui-block.second {
		width: $width4-2 - ($margin4-r/4);
		@include float-left;
		margin-right: $margin4-r/3;
	}

	> .ui-block-3,
	> .ui-block.third {
		width: $width4-3 - ($margin4-r/4);
		@include float-left;
		margin-right: $margin4-r/3;
	}

	> .ui-block-4,
	> .ui-block.last {
		width: $width4-4 - ($margin4-r/4);
		@include float-left;
		margin-right: 0;
	}
}


/* Grid-5 vars */

$width5-1: 20% !default;
$width5-2: 20% !default;
$width5-3: 20% !default;
$width5-4: 20% !default;
$width5-5: 20% !default;
$margin5-r: 8% !default;

@mixin ui-grid-5($width5-1,$width5-2,$width5-3,$width5-4,$width5-5,$margin5-r) {

	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width5-1 - ($margin5-r/5);
		@include float-left;
		margin-right: $margin5-r/4;
	}

	> .ui-block-2,
	> .ui-block.second {
		width: $width5-2 - ($margin5-r/5);
		@include float-left;
		margin-right: $margin5-r/4;
	}

	> .ui-block-3,
	> .ui-block.third {
		width: $width5-3 - ($margin5-r/5);
		@include float-left;
		margin-right: $margin5-r/4;
	}

	> .ui-block-4,
	> .ui-block.fourth {
		width: $width5-4 - ($margin5-r/5);
		@include float-left;
		margin-right: $margin5-r/4;
	}

	> .ui-block-5,
	> .ui-block.last {
		width: $width5-5 - ($margin5-r/5);
		@include float-left;
		margin-right: 0;
	}
}



/* !============================================= */

/* ! Micro Layouts						   		  */

/* !============================================= */


// Art & Text Pairs
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
// FOR: Harmoniously placing art and text next to each other.
// Good for thumbnails/text and many other art/text situations
// WHY: It's a common pattern. It's easier to write this way.

// HTML:
// <article class="l-pair">
//	<div class="art-block">
//		<img class="art" src="#" />
//	</div> <!-- /art-block -->
//	<div class="txt-block">
//		<h1>Headline</h1>
//		<p>Paragraph paragraph paragraph paragraph</p>
//	</div> <!-- /txt-block -->
// </article> <!-- /l-pair -->

// USE: @include pair(100px, 30px);

@mixin pair($art-width: 50px, $art-margin: 20px, $v-align: middle, $direction: left) {
	$gutter: $art-width + $art-margin;
	@include pie-clearfix;

	@if $v-align == middle {
		display: table;

		.art-bd {
			display: table-cell;
			width: $art-width;
			margin: 0;
			> .art {
				@include resp-img;
			}
		}
		.txt-bd {
			display: table-cell;
			vertical-align: middle;
			padding-left: $art-margin;
		}

		// If lower than IE8, which has no
		// support for tables
		.lt-ie8 {
			.art-bd,
			.txt-bd {
				display: block;
			}
			.art-bd {
				width: $art-width;
				float: left;
			}
			.txt-bd {
				margin-left: $gutter;
			}
		} // .lt-ie8
	} //middle

	@else {
		.art-bd,
		.txt-bd {
			display: block;
		}
		.art-bd {
			width: $art-width;
			@if $direction == right {
				float: right;
			} else {
				float: left;
			}
			margin: 0;
			> .art {
				@include resp-img;
			}
		}
		.txt-bd {
			@if $direction == right {
				margin-right: $gutter;
			} else {
				margin-left: $gutter;
			}
		}
	}

} //pair


/* !============================================= */

/* ! Spacers						   			  */

/* !============================================= */

/* Variables & Mixins */

$spacer: 50px;
$spacer-small: round($spacer/5);
$spacer-med: round($spacer/2);
$spacer-large: round($spacer*1.5);


$spacer-top: inherit !default;
$spacer-bottom: inherit !default;

@mixin spacer($spacer-top, $spacer-bottom) {
	margin-top: $spacer-top;
	margin-bottom: $spacer-bottom;
}


/* Selectors */

.spacer {
	margin-bottom: $spacer;
}

.spacer-small {
	margin-bottom: $spacer-small;
}

.spacer-med {
	margin-bottom: $spacer-med;
}

.spacer-large {
	margin-bottom: $spacer-large;
}


/* !============================================= */

/* ! Image Blocks						   		  */

/* !============================================= */

.imageblock {
	@extend .clearfix;
}

.imageblock-image {
	float: left;
	margin: 0 10px 0 0;
}

.imageblock-image-right {
	float: right;
	margin: 0 0 0 10px;
}

.imageblock-content {
	display: table-cell;
	vertical-align: top;
	width: 1000em;
}

.ie6 .imageblock-content,
.ie7 .imageblock-content {
	display: block;
	width: auto;
	zoom: 1;
}
