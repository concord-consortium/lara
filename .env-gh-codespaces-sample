# This configuration adds the following overlays:
#
# docker-gh-codespaces: GitHub Codespaces settings (eg port 3000 exposed)
#
# docker-compose-portal-proxy: a configuration to connect with a local portal running
#   behind a docker based proxy container with the name of http-proxy.
#   You can learn more about this at the top of docker/dev/docker-compose-portal-proxy.yml
COMPOSE_FILE=docker-compose.yml:docker/dev/docker-compose-gh-codespaces.yml:docker/dev/docker-compose-portal-proxy.yml

# Run `echo ${CODESPACE_NAME}` in Portal GitHub Codespace container and copy returned value here. It'll be used
# to automatically set PORTAL_HOST variable.
PORTAL_CODESPACE_NAME=

PORTAL_HOST=${PORTAL_CODESPACE_NAME}-3000.preview.app.github.dev
PORTAL_PROTOCOL=https

# CODESPACE_NAME is available in GitHub Codespace container.
LARA_HOST=${CODESPACE_NAME}-3000.preview.app.github.dev
LARA_PROTOCOL=https

# By default the production URL for shutterbug will be used by shutterbug.js
# You can use this variable to switch it to staging
# SHUTTERBUG_URI=https://dgjr6g3z30.execute-api.us-east-1.amazonaws.com/staging

# To use local Activity Player
# ACTIVITY_PLAYER_URL=http://localhost:8081
# URL of script to create an Activity Player compatible version of resources by converting old embeddables to library interactives
# CONVERSION_SCRIPT_URL=https://models-resources.concord.org/question-interactives/convert-old-lara/?lara_root=https://app.lara.docker&template=https://app.lara.docker/api/v1/activities/214.json

# To connect to reporting service in dev we need the following variables
REPORT_SERVICE_URL=https://us-central1-report-service-dev.cloudfunctions.net/api
# Update to be the development token. This can be found in the Cloud Formation lara-ecs-staging stack parameters.
REPORT_SERVICE_TOKEN=

# Report URL is used to generate student report links.
# REPORT_URL=https://portal-report.concord.org/branch/master/index.html
