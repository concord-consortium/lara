version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-dev
    command: docker/dev/run.sh
    environment:
      # Look at the docker/dev/docker-compose-*.yml files for configuratio of
      # additional variables.
      C_RATER_FAKE:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: xyzzy
      GOOGLE_ANALYTICS_ACCOUNT:
      LARA_VERSION: Local Docker
      # Secret token to access report service
      REPORT_SERVICE_TOKEN:
      # URL to send resource structure to when publishing
      REPORT_SERVICE_URL:
      # URL of LARA itself. This self url will be used in the resource structure to provide links to
      # allow the teacher to view the pages of the activity from the report.
      # If REPORT_SERVICE_TOOL_ID isn't set then the host name of this URL will be used
      # as the source key in the report service.
      REPORT_SERVICE_SELF_URL: "${LARA_PROTOCOL:-http}://${LARA_HOST:-app.lara.docker}"
      # This will be used as the source key in the report service.
      # The resource structure will be stored under this source key as well as the student
      # answers. When running locally the USER name is added to the end to keep each
      # developers data separate
      REPORT_SERVICE_TOOL_ID: "${LARA_HOST:-app.lara.docker}.${USER}"
      REPORT_URL: "${REPORT_URL:-https://portal-report.concord.org/branch/master/index.html}"
      SECRET_TOKEN: b30c94c7-81b7-4f20-8df9-686b079a616a
      # Enables logging to stdout instead of file.
      RAILS_STDOUT_LOGGING: "true"
      # set to https in .env
      PORTAL_PROTOCOL: "${PORTAL_PROTOCOL:-http}"
      # update in .env if necessary (e.g. to work locally on ACTIVITY_PLAYER_URL)
      ACTIVITY_PLAYER_URL: "${ACTIVITY_PLAYER_URL:-https://activity-player.concord.org/branch/master/}"
      # URL of script to create an Activity Player compatible version of resources by converting old embeddables to library interactives
      CONVERSION_SCRIPT_URL: "${CONVERSION_SCRIPT_URL:-https://models-resources.concord.org/question-interactives/convert-old-lara/?lara_root=https://app.lara.docker&template=https://app.lara.docker/api/v1/activities/214.json}"
      # set to "true" to allow for linking to glossaries solely based on id, ignoring the domain
      ENABLE_DANGEROUS_GLOSSARY_LINKING_ON_IMPORT:
      # set to "true" to disable auto publishing on saves of activities and sequences
      DISABLE_AUTO_PUBLISHING:

      VIRTUAL_HOST: "${LARA_HOST:-app.lara.docker}"

    # no ports are published, see below for details
    depends_on:
      - db
    volumes:
      - .:/lara
      - "bundle:/bundle"
    # open standard in and turn on tty so we can attach to the container and debug it
    stdin_open: true
    tty: true

  db:
    image: mysql:5.6
    environment:
      MYSQL_ROOT_PASSWORD: xyzzy
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    volumes:
      # use a named volume here so the database is preserved after a down and up
      - mysql:/var/lib/mysql
volumes:
  bundle:
  mysql:

# In this file the web app port is not published. However, if you run
# `docker-compose up` (without customizing your environment) the port will be published
# to 3000.  This is because the docker-compose.override.yml file will be loaded
# automatically by docker-compose.
# You will likely want to modify how the port is published, so it doesn't conflict.
# Take a look at the this overlay for more information:
#   docker/dev/docker-compose-random-port.yml
